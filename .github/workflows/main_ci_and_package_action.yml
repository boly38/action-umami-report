name: main_ci_and_package_action
permissions:
  contents: write
  pull-requests: write
  pages: write

on:
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the prod branch
  push:
    branches:
      - to-package
      - main
  pull_request:
    paths:
      - 'lib/**'
      - 'package.json'
      - 'pnpm-lock.yaml'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      UMAMI_SERVER: ${{secrets.UMAMI_SERVER}}
      UMAMI_USER: ${{secrets.UMAMI_USERNAME}}
      UMAMI_PASSWORD: ${{secrets.UMAMI_PASSWORD}}
      UMAMI_SITE_DOMAIN: ${{secrets.UMAMI_SITE_DOMAIN}}
      MUST_BE_PACKAGED: ${{ github.ref == 'refs/heads/to-package' }}
    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      # https://github.com/pnpm/action-setup
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          # version from package.json
          run_install: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: SETUP - Install dependencies
        run: |
          echo "Installing dependencies..."
          pnpm i --frozen-lockfile

      - name: CHECK - Check for outdated dependencies (non-blocking warning)
        run: |
          echo "🔍 Checking for outdated dependencies..."
          if pnpm outdated --depth=3; then
            echo "::notice title=Deps OK::✅ Dependencies are up to date 🎉"
          else
            echo "::warning title=ℹ️ Outdated Dependencies::Some dependencies are outdated. Please consider updating them."
          fi

      - name: CHECK - Run inline pnpm audit (non-blocking warning)
        run: |
          echo "🔍 Checking for vulnerabilities..."
          if pnpm audit; then
            echo "::notice title=Audit OK::✅ Audit is fine 🎉"
          else
            echo "::warning title=ℹ️ vulnerabilities found"
          fi

      - name: CHECK - pnpm audit and comment on PR
        uses: JamesRobertWiseman/pnpm-audit@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          level: moderate   # 'low'|'moderate'|'high'|'critical'
          fails: true

      - name: TEST - run ci-tests with c8 code coverage
        env:
          UMAMI_USER: ${{secrets.UMAMI_USERNAME}}
          UMAMI_TEST_SERVER: ${{secrets.UMAMI_TEST_SERVER}}
          UMAMI_TEST_USER: ${{secrets.UMAMI_TEST_USER}}
          UMAMI_TEST_PASSWORD: ${{secrets.UMAMI_TEST_PASSWORD}}
          UMAMI_TEST_SITE_DOMAIN: ${{secrets.UMAMI_TEST_SITE_DOMAIN}}
          UMAMI_TEST_CLOUD_API_KEY: ${{secrets.UMAMI_TEST_CLOUD_API_KEY}}
          UMAMI_TEST_CLOUD_SITE_DOMAIN: ${{secrets.UMAMI_TEST_CLOUD_SITE_DOMAIN}}
        run: pnpm run ci-test

      - name: COVERAGE - Report coverage on pull request
        if: github.event_name == 'pull_request'
        continue-on-error: true
        # uses: romeovs/lcov-reporter-action@v0.2.16 # https://github.com/romeovs/lcov-reporter-action/issues/10
        uses: andybelltree/lcov-reporter-action@v1.7.0 # https://github.com/andybelltree/lcov-reporter-action/releases
        with:
          lcov-file: ./coverage/lcov.info
          filter-changed-files: true

      - name: COVERAGE - Deploy tag coverage report on Github Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./coverage/lcov-report
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: ${{ github.event.head_commit.message }}
          force_orphan: true

      # skip node_modules in git using @vercel/ncc to package action
      - name: PACKAGE - SETUP - Install vercel/ncc for package step
        run: pnpm install -g @vercel/ncc
        if: env.MUST_BE_PACKAGED == 'true'

      - name: PACKAGE - SETUP - Define ORPHAN_BRANCH name
        id: get_branch
        if: env.MUST_BE_PACKAGED == 'true'
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "ORPHAN_BRANCH=main-version" >> $GITHUB_ENV
          else
          echo "ORPHAN_BRANCH=$(jq -r .orphanBranch package.json)" >> $GITHUB_ENV
          fi
        # nb: jq extracts from package.json using 'orphanBranch' as key
        # warn: dont target 'main' as orphan branch

      - name: PACKAGE - BUILD - autonomous package Action with deps in dist/ and update last tag
        if: env.MUST_BE_PACKAGED == 'true'
        run: |
          ./.github/scripts/package.sh
          git tag -d "last-${ORPHAN_BRANCH}" || true
          git push origin ":refs/tags/last-${ORPHAN_BRANCH}" || true
          git tag "last-${ORPHAN_BRANCH}"
          git push origin "last-${ORPHAN_BRANCH}"

      - name: DEPLOY package - push dist/ on target orphan branch ${{ env.ORPHAN_BRANCH }}
        uses: peaceiris/actions-gh-pages@v4
        if: env.MUST_BE_PACKAGED == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: ${{ env.ORPHAN_BRANCH }}
          publish_dir: ./dist
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: ${{ github.ref }} commit ${{ github.sha }}
          force_orphan: true